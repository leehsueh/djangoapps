"""
CREATE script from excel/CSV data
setup:
- save greek_vocab.xls as Unicode text (tab delimited)
- open the unicode txt in notepad++
- set the Format to "Encode in UTF-8 without BOM"
- save the txt
"""

"""Constants"""
POS_NOUN_SHORT = 'N'
POS_NOUN_LONG = 'Noun'
POS_PRONOUN_SHORT = 'PN'
POS_PRONOUN_LONG = 'Pronoun'
POS_VERB_SHORT = 'V'
POS_VERB_LONG = 'Verb'
POS_ADJ_SHORT = 'ADJ'
POS_ADJ_LONG = 'Adjective'
POS_PREP_SHORT = 'PREP'
POS_PREP_LONG = 'Preposition'
POS_ADV_SHORT = 'ADV'
POS_ADV_LONG = 'Adverb'
POS_CONJ_SHORT = 'CONJ'
POS_CONJ_LONG = 'Conjunction'
POS_PRTCPL_SHORT = 'PRTCPL'
POS_PRTCPL_LONG = 'Participle'
POS_CONSTRUCT_SHORT = 'CNSTRCT'
POS_CONSTRUCT_LONG = 'Construct'

col_word = 'greek_word'
col_pos = 'part_of_speech'
col_def = 'definition'
col_parse = 'parsing_info'
col_notes = 'notes'
col_ln = 'lesson_number'

def create_script(input_file, output_file):
    DELIMITER = '\t'
    tbl = 'ntgreekvocab_simplecard'
    pos_map = {
        'noun': POS_NOUN_SHORT,
        'pronoun': POS_PRONOUN_SHORT,
        'verb': POS_VERB_SHORT,
        'conjunction': POS_CONJ_SHORT,
        'preposition': POS_PREP_SHORT,
        'adverb': POS_ADV_SHORT,
        'adjective': POS_ADJ_SHORT,
        'participle': POS_PRTCPL_SHORT,
        'construct': POS_CONSTRUCT_SHORT
        }
    
    fi = open(input_file, 'r')
    for line in fi:
        if not line.strip() or line[0] == '#':
            continue
        row = line.split(DELIMITER)
        if len(row) == 6:
            data.append({
                col_word: row[0].replace('"',''),
                col_pos: pos_map[row[1]].replace('"',''),
                col_def: row[2].replace('"',''),
                col_ln: row[3],
                col_parse: row[4].replace('"',''),
                col_notes: row[5].replace('"','').strip()
            })
        else:
            print 'Skipped row: ', row
    fi.close()

    # create script file
    fo = open(output_file,'w')
    for row in data:
        sql = 'INSERT INTO ' + tbl + '\n\t('
        attrs = row.keys()
        for attr in attrs[:-1]:
            sql += attr + ','
        sql += attrs[-1] + ')\n\tVALUES ('
        for attr in attrs[:-1]:
            if attr == col_ln:
                sql += row[col_ln] + ','
            else:
                sql += "'" + row[attr] + "'" + ','
        sql += "'" + row[attrs[-1]] + "'" + ');\n'  # last attribute is parsing_info
        fo.write(sql)
    fo.close()

data = []
create_script('greek_vocab_utf8.txt', 'create_script.sql')
